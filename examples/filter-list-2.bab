;; Filter a list by a predicate

(list
 (lib (λ (λ (@ (@ (@ fold (λ (λ (if (@ (@ (@ $3 $2) $1) $0) (cons $0 $1) $1)))) empty) $0))) (@ $0 (λ (λ (λ (@ (@ gt? $0) 0))))))
 (lib (λ (λ (@ (@ (@ fold (λ (λ (if (@ (@ (@ $3 $2) $1) $0) (cons $0 $1) $1)))) empty) $0))) (@ $0 (λ (λ (λ (@ (@ eq? $0) 1))))))
 (lib (λ (λ (@ (@ (@ fold (λ (λ (if (@ (@ (@ $3 $2) $1) $0) (cons $0 $1) $1)))) empty) $0))) (@ $0 (λ (λ (λ (@ (@ eq? 3) $0))))))
 (lib (λ (λ (@ (@ (@ fold (λ (λ (if (@ (@ (@ $3 $2) $1) $0) (cons $0 $1) $1)))) empty) $0))) (@ $0 (λ (λ (λ (@ prime? $0))))))
 (lib (λ (λ (@ (@ (@ fold (λ (λ (if (@ (@ (@ $3 $2) $1) $0) (cons $0 $1) $1)))) empty) $0))) (@ $0 (λ (λ (λ (@ (@ eq? 0) (@ (@ mod $0) 2)))))))
 (lib (λ (λ (@ (@ (@ fold (λ (λ (if (@ (@ (@ $3 $2) $1) $0) (cons $0 $1) $1)))) empty) $0))) (@ $0 (λ (λ (λ true))))))



;; Local Variables:
;; mode: lisp
;; End:
